<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ptrMedico.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GW4KNGvW/wHqfbrcBoTf7QAAAABJRU5ErkJggg==
</value>
  </data>
</root>